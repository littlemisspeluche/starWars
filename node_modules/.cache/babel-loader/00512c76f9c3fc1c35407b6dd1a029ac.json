{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/oriannegilaad/Desktop/starWars/src/components/AddToFavoriteBtn.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Tooltip, Typography, IconButton } from '@material-ui/core';\nimport Chewbacca from '../assets/svg/Chewbacca';\nimport DarthVeder from '../assets/svg/DarthVeder';\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    color: '#fff'\n  }\n}));\nconst HtmlTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: '#414141',\n    color: '#fff',\n    maxWidth: 200,\n    fontSize: theme.typography.pxToRem(12)\n  },\n  arrow: {\n    color: '#414141'\n  }\n}))(Tooltip);\nexport default function AddToFavoriteBtn({\n  film,\n  i,\n  favorites,\n  setFavorites,\n  pastFavorites,\n  setPastFavorites\n}) {\n  _s();\n\n  const classes = useStyles();\n  let addArray;\n\n  const addToFavorite = props => {\n    let array = favorites;\n    addArray = true;\n    array && array.map((item, key) => {\n      if (item === props.i) {\n        array.splice(key, 1);\n        addArray = false;\n      }\n\n      return addArray;\n    });\n\n    if (addArray) {\n      array.push(props.i);\n    }\n\n    setFavorites([...array]);\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n\n    if (props.i !== pastFavorites[props.i]) {\n      addToPastFavorite(props);\n    }\n  };\n\n  const addToPastFavorite = props => {\n    let array = pastFavorites;\n    addArray = true;\n\n    if (addArray) {\n      array.push(props.i);\n    }\n\n    setPastFavorites([...array]);\n    localStorage.setItem('pastFavorites', JSON.stringify(pastFavorites));\n  };\n\n  const getTooltipTitle = () => {\n    if (favorites.includes(i) && pastFavorites.includes(i)) {\n      return 'Remove from Favorite';\n    } else if (!favorites.includes(i) && pastFavorites.includes(i)) {\n      return 'Add back to Favorite';\n    } else {\n      return 'Add to Favorite';\n    }\n  };\n\n  const AddToFavorite = () => {\n    return /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => addToFavorite({\n        film,\n        i\n      }),\n      className: classes.icon,\n      \"aria-label\": \"add to favorites\",\n      children: favorites.includes(i) || !favorites.includes(i) && !pastFavorites.includes(i) ? /*#__PURE__*/_jsxDEV(Chewbacca, {\n        favorites: favorites,\n        i: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(DarthVeder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(HtmlTooltip, {\n    arrow: true,\n    title: /*#__PURE__*/_jsxDEV(Typography, {\n      children: getTooltipTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 14\n    }, this),\n    children: AddToFavorite()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddToFavoriteBtn, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddToFavoriteBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToFavoriteBtn\");","map":{"version":3,"sources":["/Users/oriannegilaad/Desktop/starWars/src/components/AddToFavoriteBtn.js"],"names":["React","makeStyles","withStyles","Tooltip","Typography","IconButton","Chewbacca","DarthVeder","useStyles","theme","icon","color","HtmlTooltip","tooltip","backgroundColor","maxWidth","fontSize","typography","pxToRem","arrow","AddToFavoriteBtn","film","i","favorites","setFavorites","pastFavorites","setPastFavorites","classes","addArray","addToFavorite","props","array","map","item","key","splice","push","localStorage","setItem","JSON","stringify","addToPastFavorite","getTooltipTitle","includes","AddToFavorite"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Tooltip, Typography, IconButton} from '@material-ui/core';\nimport Chewbacca from '../assets/svg/Chewbacca'\nimport DarthVeder from '../assets/svg/DarthVeder'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: '#fff'\n  },\n}));\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#414141',\n    color: '#fff',\n    maxWidth: 200,\n    fontSize: theme.typography.pxToRem(12),\n  },\n  arrow: {\n    color: '#414141',\n  },\n}))(Tooltip);\n\nexport default function AddToFavoriteBtn({film, i, favorites, setFavorites, pastFavorites, setPastFavorites}){\n  const classes = useStyles();\n  let addArray;\n  \n  const addToFavorite = (props) => {\n    let array = favorites\n    addArray = true\n    array && array.map((item, key) => {\n      if(item === props.i){\n        array.splice(key, 1)\n        addArray =  false\n      }\n      return addArray\n    })\n    if(addArray){\n      array.push(props.i)\n    }\n    setFavorites([...array])\n    localStorage.setItem('favorites', JSON.stringify(favorites))\n    if(props.i !== pastFavorites[props.i]){\n      addToPastFavorite(props)\n    }\n  }\n\n  const addToPastFavorite = (props) => {\n    let array = pastFavorites\n    addArray = true\n    if(addArray){\n      array.push(props.i)\n    }\n    setPastFavorites([...array])\n    localStorage.setItem('pastFavorites', JSON.stringify(pastFavorites))\n  }\n\n  const getTooltipTitle = () => {\n    if(favorites.includes(i) && pastFavorites.includes(i)){\n      return 'Remove from Favorite'\n    } else if(!favorites.includes(i) && pastFavorites.includes(i)){\n      return 'Add back to Favorite'\n    } else {\n      return 'Add to Favorite'\n    }\n  }\n\n  const AddToFavorite = () => {\n    return(\n      <IconButton onClick={() => addToFavorite({film, i})} className={classes.icon} aria-label=\"add to favorites\">\n        {favorites.includes(i) || (!favorites.includes(i) && !pastFavorites.includes(i))\n          ?\n          <Chewbacca favorites={favorites} i={i} />\n          :\n          <DarthVeder />         \n        }\n      </IconButton>\n    )\n  }\n\n  return (\n    <HtmlTooltip \n      arrow \n      title={<Typography>{getTooltipTitle()}</Typography>}\n    >\n      {AddToFavorite()}\n    </HtmlTooltip>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}